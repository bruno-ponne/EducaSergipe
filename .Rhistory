freq(ESCOLAS_SE$IN_ACESSIBILIDADE_RAMPAS)  # 17,6% NA
freq(ESCOLAS_SE$IN_BIBLIOTECA) # 17,6% NA
IND08 <- ESCOLAS_SE %>%
select(NO_MUNICIPIO, CO_MUNICIPIO, IN_BIBLIOTECA) %>%
na.omit()%>%
group_by(NO_MUNICIPIO, CO_MUNICIPIO)%>%
summarise(bibliotecas = mean(IN_BIBLIOTECA==1)*100) %>%
arrange(desc(bibliotecas))
View(IND08)
freq(ESCOLAS_SE$IN_LABORATORIO_INFORMATICA) # 17,6% NA
IND09 <- ESCOLAS_SE %>%
select(NO_MUNICIPIO, CO_MUNICIPIO, IN_LABORATORIO_INFORMATICA)%>%
na.omit()%>%
group_by(NO_MUNICIPIO, CO_MUNICIPIO)%>%
summarise(lab= mean(IN_LABORATORIO_INFORMATICA==1)*100) %>%
arrange(desc(lab))
View(IND09)
freq(ESCOLAS_SE$IN_INTERNET) # 17,6% NA
IND10 <- ESCOLAS_SE %>%
select(NO_MUNICIPIO, CO_MUNICIPIO,IN_INTERNET) %>%
na.omit() %>%
group_by(NO_MUNICIPIO,CO_MUNICIPIO)%>%
summarise(internet = mean(IN_INTERNET==1)*100) %>%
arrange(desc(internet))
View(IND10)
# Script 05 - Mapas e Desempenho
# Bibliotecas:
library(descr)
library(dplyr)
library(ggplot2)
library(readr)
library(sf)
load("dados/SERGIPE_ALUNO.Rdata")
load("dados/ESCOLAS_SE.Rdata")
load("dados/RANKING.Rdata")
# Carregando o mapa de Sergipe:
map_se <- read_sf("dados/mapa/28MUE250GC_SIR.shp")
map_se <- rename(map_se, CO_MUNICIPIO = CD_GEOCODM )
map_se$CO_MUNICIPIO = as.numeric(map_se$CO_MUNICIPIO)
map_ideb <- left_join(map_se, RANKING, by = "CO_MUNICIPIO")
map_ideb$nivel <- cut(map_ideb$IDEB_VALIDO,
breaks = c(3.2, 3.7, 4.2, 4.7, 5.2, 5.8),
labels = c("[3,2 - 3,7)", "[3,7 - 4,2)", "[4,2 - 4,7)", "[4,7 - 5,2)", "[5,2 - 5,8)"),
right  = FALSE)
ggplot()+
geom_sf(data = map_ideb, aes(geometry=geometry, fill = nivel), color="black", size= 0.3)+
scale_fill_manual(name="", values = c('#29166F','#523959','#916d38','#CFA017','#F8C301'))+
theme(panel.background = element_rect(fill = "white", colour = "gray"))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
legend.position = "none")
ggplot()+
geom_sf(data = map_ideb, aes(geometry=geometry, fill = IDEB_VALIDO), color="black", size= 0.3)+
scale_fill_gradient(name = "Ideb", low ="#F8C301", high ="#29166F")+
theme(panel.background = element_rect(fill = "white", colour = "white"))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank())
# Script 05 - Mapas e Desempenho
# Bibliotecas:
library(descr)
library(dplyr)
library(ggplot2)
library(readr)
library(sf)
load("dados/SERGIPE_ALUNO.Rdata")
load("dados/ESCOLAS_SE.Rdata")
load("dados/RANKING.Rdata")
# Carregando o mapa de Sergipe:
map_se <- read_sf("dados/mapa/28MUE250GC_SIR.shp")
map_se <- rename(map_se, CO_MUNICIPIO = CD_GEOCODM )
map_se$CO_MUNICIPIO = as.numeric(map_se$CO_MUNICIPIO)
# Distribuição Espacial do IDEB
map_ideb <- left_join(map_se, RANKING, by = "CO_MUNICIPIO")
ggplot()+
geom_sf(data = map_ideb, aes(geometry=geometry, fill = IDEB_VALIDO), color="black", size= 0.3)+
scale_fill_gradient(name = "Ideb", low ="#F8C301", high ="#29166F")+
theme(panel.background = element_rect(fill = "white", colour = "white"))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank())
load("dados/indicadores/IND08.RData")
MAP_BIB <- left_join(map_ideb, IND08, by = "CO_MUNICIPIO")
sem_bib <- MAP_BIB %>% filter(bibliotecas==0)
ggplot()+
geom_sf(data = map_se, aes(geometry=geometry), size=0.3, color="gray")+
geom_sf(data = sem_bib, aes(geometry=geometry, fill = nivel), color="black", size= 0.3)+
scale_fill_manual(name="IDEB", values = c('#ffffcc','#a1dab4','#41b6c4','#2c7fb8','#253494'))+
labs(title = "Desempenho no IDEB para municípios sem bibliotecas nas escolas")+
theme(panel.background = element_rect(fill = "white", colour = "gray"))+
theme(axis.text = element_blank(),
axis.ticks = element_blank())
load("dados/indicadores/IND01.RData")
IND01 <- rename(IND01, CO_MUNICIPIO = ID_MUNICIPIO)
MAP_FAMILIA <- left_join(map_ideb, IND01, by = "CO_MUNICIPIO")
baixa_part <- MAP_FAMILIA %>% filter(Nunca_QuaseNunca>=20)
ggplot()+
geom_sf(data = map_se, aes(geometry=geometry), size=0.3, color="gray")+
geom_sf(data = baixa_part, aes(geometry=geometry, fill = nivel), color="black", size= 0.3)+
scale_fill_manual(name="IDEB", values = c('#ffffcc','#a1dab4','#41b6c4','#2c7fb8','#253494'))+
labs(title = "Desempenho no IDEB para municípios sem bibliotecas nas escolas")+
theme(panel.background = element_rect(fill = "white", colour = "gray"))+
theme(axis.text = element_blank(),
axis.ticks = element_blank())
map_se <- read_sf("dados/mapa/28MUE250GC_SIR.shp")
map_se$CD_GEOCODM <- as.numeric(map_se$CD_GEOCODM)
map_se <- rename(map_se, ID_MUNICIPIO = CD_GEOCODM )
cod_mun_SE <- read_delim("dados/cod_mun_SE.csv", ";", escape_double = FALSE, trim_ws = TRUE)
names(cod_mun_SE) <- c("ID_MUNICIPIO", "NO_MUNICIPIO")
cod_mun_SE$ID_MUNICIPIO <- as.numeric(cod_mun_SE$ID_MUNICIPIO)
map_se <- left_join(map_se,cod_mun_SE, by= "ID_MUNICIPIO")
for(element in map_se$NO_MUNICIPIO){
plot <- ggplot()+
geom_sf(data = map_se, aes(fill = NO_MUNICIPIO == element, color = NO_MUNICIPIO == element))+
scale_fill_manual(values = c("#F8C301", "#009B40"))+
scale_color_manual(values = c("#F8C301", "#009B40"))+
theme(
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = "none",
panel.background = element_rect(fill = "transparent"), # bg of the panel
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent"), # get rid of legend panel bg
panel.grid.major = element_blank(), panel.grid.minor = element_blank())
nome <- paste("mapas_prontos/", element,".png", sep="")
ggsave(plot, filename = nome,  bg = "transparent", width = 7, height = 10, units = "cm")
}
for(i in 1:10){
load(paste("dados/indicadores/IND0",as.character(i),".RData", sep=""))}
load("dados/indicadores/IND10.RData")
load("dados/RANKING.Rdata")
map_ideb <- left_join(map_se, RANKING, by = "CO_MUNICIPIO")
map_ideb$nivel <- cut(map_ideb$IDEB_VALIDO,
breaks = c(3.2, 3.7, 4.2, 4.7, 5.2, 5.8),
labels = c("[3,2 - 3,7)", "[3,7 - 4,2)", "[4,2 - 4,7)", "[4,7 - 5,2)", "[5,2 - 5,8)"),
right  = FALSE)
ggplot()+
geom_sf(data = map_ideb, aes(geometry=geometry, fill = IDEB_VALIDO), color="black", size= 0.3)+
scale_fill_gradient(name = "Ideb", low = "#ffffcc", high = "#29166F")+
labs(title = "Desempenho no IDEB 2019/2017", subtitle = "Cores mais fortes representam melhores índices") +
theme(panel.background = element_rect(fill = "white", colour = "gray"))+
theme(axis.text = element_blank(),
axis.ticks = element_blank())
# Bibliotecas:
library(descr)
library(dplyr)
library(ggplot2)
library(readr)
library(sf)
load("dados/SERGIPE_ALUNO.Rdata")
load("dados/ESCOLAS_SE.Rdata")
load("dados/RANKING.Rdata")
# Carregando o mapa de Sergipe:
map_se <- read_sf("dados/mapa/28MUE250GC_SIR.shp")
map_se <- rename(map_se, CO_MUNICIPIO = CD_GEOCODM )
map_se$CO_MUNICIPIO = as.numeric(map_se$CO_MUNICIPIO)
map_ideb <- left_join(map_se, RANKING, by = "CO_MUNICIPIO")
map_ideb <- left_join(map_se, RANKING, by = "CO_MUNICIPIO")
map_ideb$nivel <- cut(map_ideb$IDEB_VALIDO,
breaks = c(3.2, 3.7, 4.2, 4.7, 5.2, 5.8),
labels = c("[3,2 - 3,7)", "[3,7 - 4,2)", "[4,2 - 4,7)", "[4,7 - 5,2)", "[5,2 - 5,8)"),
right  = FALSE)
ggplot()+
geom_sf(data = map_ideb, aes(geometry=geometry, fill = IDEB_VALIDO), color="black", size= 0.3)+
scale_fill_gradient(name = "Ideb", low = "#ffffcc", high = "#29166F")+
labs(title = "Desempenho no IDEB 2019/2017", subtitle = "Cores mais fortes representam melhores índices") +
theme(panel.background = element_rect(fill = "white", colour = "gray"))+
theme(axis.text = element_blank(),
axis.ticks = element_blank())
ggplot()+
geom_sf(data = map_ideb, aes(geometry=geometry, fill = nivel), color="black", size= 0.25)+
scale_fill_manual(name="", values = c('#ffffcc','#c7e9b4',"#41b6c4","#2c7fb8","#29166F"))+
labs(title = "Desempenho no IDEB 2019/2017", subtitle = "Cores mais fortes representam melhores índices") +
theme(panel.background = element_rect(fill = "white", colour = "gray"))+
theme(axis.text = element_blank(),
axis.ticks = element_blank())
# Relação IDEB vs INTERNET na escola
load("dados/indicadores/IND05.RData")
IND05 <- rename(IND05, CO_MUNICIPIO = ID_MUNICIPIO)
livro <- left_join(map_ideb, IND05, by = "CO_MUNICIPIO")
ggplot(data = livro, aes(x = livro, y = IDEB_VALIDO))+
geom_point()+
geom_smooth(method = "lm")
ggplot()+
geom_sf(data = map_ideb, aes(geometry=geometry, fill = IDEB_VALIDO), color="black", size= 0.3)+
scale_fill_gradient(name = "Ideb", low ="#F8C301", high ="#29166F")+
theme(panel.background = element_rect(fill = "transparent"),
plot.background = element_rect(fill = "transparent", color = NA), # bg of the plot
legend.background = element_rect(fill = "transparent"), # get rid of legend bg
legend.box.background = element_rect(fill = "transparent", color = "white"),
panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ # get rid of legend panel bg)
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank(),
legend.text=element_text(color="white"),
legend.title = element_text(color = "white"))
# Script 05 - Mapas e Desempenho
# Bibliotecas:
library(descr)
library(dplyr)
library(ggplot2)
library(readr)
library(sf)
load("dados/SERGIPE_ALUNO.Rdata")
load("dados/ESCOLAS_SE.Rdata")
load("dados/RANKING.Rdata")
# Carregando o mapa de Sergipe:
map_se <- read_sf("dados/mapa/28MUE250GC_SIR.shp")
map_se <- rename(map_se, CO_MUNICIPIO = CD_GEOCODM )
map_se$CO_MUNICIPIO = as.numeric(map_se$CO_MUNICIPIO)
# Distribuição Espacial do IDEB - Figura 3
map_ideb <- left_join(map_se, RANKING, by = "CO_MUNICIPIO")
ggplot()+
geom_sf(data = map_ideb, aes(geometry=geometry, fill = IDEB_VALIDO), color="black", size= 0.3)+
scale_fill_gradient(name = "Ideb", low ="#F8C301", high ="#29166F")+
theme(panel.background = element_rect(fill = "white", colour = "white"))+
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank())
PIB <- read_xlsx("dados/PIBSE.xlsx")
library(readxl)
library(writexl)
library(dplyr)
library(ggplot2)
library(descr)
IDEB <- read_xlsx("dados/IDEB.xlsx")
IDEB$IDEB_2017 <- as.numeric(IDEB$IDEB_2017)
IDEB$IDEB_2019 <- as.numeric(IDEB$IDEB_2019)
IDEB$IDEB_VALIDO <- IDEB$IDEB_2019
IDEB$IDEB_VALIDO[IDEB$NO_MUNICIPIO=="Gararu"] <- IDEB$IDEB_2017[IDEB$NO_MUNICIPIO=="Gararu"]
IDEB$IDEB_VALIDO[IDEB$NO_MUNICIPIO=="Malhador"] <- IDEB$IDEB_2017[IDEB$NO_MUNICIPIO=="Malhador"]
RANKING <- IDEB %>%
arrange(desc(IDEB_VALIDO))
RANKING$Ranking <- paste(row.names(RANKING),"º", sep="")
View(RANKING)
summary(RANKING$IDEB_VALIDO)
ggplot(RANKING, aes(x=as.factor(IDEB_VALIDO)))+
geom_dotplot( color= "#29166F", fill = "#29166F")+
geom_vline(xintercept = 10.76, size = 1,  color= "#F8C301", linetype= "dashed")+
geom_vline(xintercept = 21, size = 1,  color= "#009B40",  linetype= "dashed")+
xlab("IDEB")+
ylab("")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.text.y=element_blank(),
axis.line.x = element_line(colour = "#bdbdbd"),
axis.ticks.y=element_blank())
load("dados/IDEB_BRASIL.RData")
ggplot(data = IDEB_BRASIL, aes(x= IDEB_2019, color = NO_UF == "SE"))+
geom_density(size = 1)+
scale_color_manual(name = "", labels = c("Brasil","Sergipe"), values = c("#29166F","#F8C301"))+
scale_fill_manual(name = "", labels = c("Brasil","Sergipe"), values = c("#29166F","#F8C301"))+
theme_bw()+
xlab("Ideb 2019")+
ylab("Densidade")+
theme(axis.text.x = element_text(vjust = 0),
legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#bdbdbd"),
axis.line.y = element_line(colour = 'white'),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.text = element_text(size = 13),
text = element_text(size = 15))+
guides(color = guide_legend(override.aes = list(collor = c("#29166F","#F8C301"),
fill = c("#29166F","#F8C301"))))
mean(IDEB_BRASIL$IDEB_2019)
ggplot(data = IDEB_BRASIL, aes(x= IDEB_2019, color = NO_UF == "SE"))+
geom_density(size = 1)+
scale_color_manual(name = "", labels = c("Brasil","Sergipe"), values = c("#29166F","#F8C301"))+
scale_fill_manual(name = "", labels = c("Brasil","Sergipe"), values = c("#29166F","#F8C301"))+
theme_bw()+
xlab("Ideb 2019")+
ylab("Densidade")+
theme(axis.text.x = element_text(vjust = 0),
legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#bdbdbd"),
axis.line.y = element_line(colour = 'white'),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.text = element_text(size = 13),
text = element_text(size = 15))+
guides(color = guide_legend(override.aes = list(collor = c("#29166F","#F8C301"),
fill = c("#29166F","#F8C301"))))
IDEB_MUNICIPAL_BR <- IDEB_BRASIL %>%
group_by(NO_UF) %>%
summarize(IDEB = mean(IDEB_2019), frequency = n())
View(IDEB_MUNICIPAL_BR)
ggplot(data= IDEB_MUNICIPAL_BR, aes(x= reorder(NO_UF, -IDEB), y= IDEB, color = NO_UF == "SE", fill = NO_UF == "SE"))+
scale_colour_manual(values = c("#bdbdbd", "#F8C301"))+
scale_fill_manual(values = c("#bdbdbd", "#F8C301"))+
geom_bar(stat="identity", width = 0.5)+
xlab("")+
ylab("")+
theme_bw()+
theme(axis.text.x = element_text(vjust = 0),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#bdbdbd"))
sum(IDEB_MUNICIPAL_BR$IDEB*IDEB_MUNICIPAL_BR$frequency)/sum(IDEB_MUNICIPAL_BR$frequency)
View(IDEB_MUNICIPAL_BR)
IDEB$RANKING_EMPATE <- rank(desc(IDEB$IDEB_VALIDO), ties.method = "min")
View(RANKING)
View(IDEB)
library(readxl)
library(writexl)
library(dplyr)
library(ggplot2)
library(descr)
IDEB <- read_xlsx("dados/IDEB.xlsx")
IDEB$IDEB_2017 <- as.numeric(IDEB$IDEB_2017)
IDEB$IDEB_2019 <- as.numeric(IDEB$IDEB_2019)
# IDEB VÁLIDO 2017 para Malhador e Garuru e 2019 para o restante:
IDEB$IDEB_VALIDO <- IDEB$IDEB_2019
IDEB$IDEB_VALIDO[IDEB$NO_MUNICIPIO=="Gararu"] <- IDEB$IDEB_2017[IDEB$NO_MUNICIPIO=="Gararu"]
IDEB$IDEB_VALIDO[IDEB$NO_MUNICIPIO=="Malhador"] <- IDEB$IDEB_2017[IDEB$NO_MUNICIPIO=="Malhador"]
RANKING <- IDEB %>%
arrange(desc(IDEB_VALIDO))
RANKING$Ranking <- paste(row.names(RANKING),"º", sep="")
ggplot(RANKING, aes(x=as.factor(IDEB_VALIDO)))+
geom_dotplot( color= "#29166F", fill = "#29166F")+
geom_vline(xintercept = 10.76, size = 1,  color= "#F8C301", linetype= "dashed")+
geom_vline(xintercept = 21, size = 1,  color= "#009B40",  linetype= "dashed")+
xlab("IDEB")+
ylab("")+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.text.y=element_blank(),
axis.line.x = element_line(colour = "#bdbdbd"),
axis.ticks.y=element_blank())
load("dados/IDEB_BRASIL.RData")
# Distribuição no Brasil:
ggplot(data = IDEB_BRASIL, aes(x= IDEB_2019, color = NO_UF == "SE"))+
geom_density(size = 1)+
scale_color_manual(name = "", labels = c("Brasil","Sergipe"), values = c("#29166F","#F8C301"))+
scale_fill_manual(name = "", labels = c("Brasil","Sergipe"), values = c("#29166F","#F8C301"))+
theme_bw()+
xlab("Ideb 2019")+
ylab("Densidade")+
theme(axis.text.x = element_text(vjust = 0),
legend.position = "bottom",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#bdbdbd"),
axis.line.y = element_line(colour = 'white'),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
axis.text = element_text(size = 13),
text = element_text(size = 15))+
guides(color = guide_legend(override.aes = list(collor = c("#29166F","#F8C301"),
fill = c("#29166F","#F8C301"))))
IDEB_MUNICIPAL_BR <- IDEB_BRASIL %>%
group_by(NO_UF) %>%
summarize(IDEB = mean(IDEB_2019), frequency = n())
ggplot(data= IDEB_MUNICIPAL_BR, aes(x= reorder(NO_UF, -IDEB), y= IDEB, color = NO_UF == "SE", fill = NO_UF == "SE"))+
scale_colour_manual(values = c("#bdbdbd", "#F8C301"))+
scale_fill_manual(values = c("#bdbdbd", "#F8C301"))+
geom_bar(stat="identity", width = 0.5)+
xlab("")+
ylab("")+
theme_bw()+
theme(axis.text.x = element_text(vjust = 0),
legend.position = "none",
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "#bdbdbd"))
ibrary(dplyr)
library(readr)
library(descr)
library(ggplot2)
load("dados/ASSOCIACOES.RData")
freq(ASSOCIACOES$TX_RESP_Q006E)
REUNIOES <- select(ASSOCIACOES, PROFICIENCIA_LP_SAEB, PROFICIENCIA_MT_SAEB, TX_RESP_Q006E) %>% na.omit()
freq(REUNIOES$TX_RESP_Q006E)
REUNIOES$TX_RESP_Q006E[REUNIOES$TX_RESP_Q006E=="."]<-NA
REUNIOES$TX_RESP_Q006E[REUNIOES$TX_RESP_Q006E=="*"]<-NA
REUNIOES <- REUNIOES %>% na.omit() # 27,4%
grupos_reuniao <- REUNIOES
# Script 07: Associação entre os indicadores 1 e 2 e o desempenho no SAEB
library(dplyr)
library(readr)
library(descr)
library(ggplot2)
load("dados/ASSOCIACOES.RData")
freq(ASSOCIACOES$TX_RESP_Q006E)
REUNIOES <- select(ASSOCIACOES, PROFICIENCIA_LP_SAEB, PROFICIENCIA_MT_SAEB, TX_RESP_Q006E) %>% na.omit()
freq(REUNIOES$TX_RESP_Q006E)
REUNIOES$TX_RESP_Q006E[REUNIOES$TX_RESP_Q006E=="."]<-NA
REUNIOES$TX_RESP_Q006E[REUNIOES$TX_RESP_Q006E=="*"]<-NA
REUNIOES <- REUNIOES %>% na.omit() # 27,4%
grupos_reuniao <- REUNIOES
grupos_reuniao$TX_RESP_Q006E[grupos_reuniao$TX_RESP_Q006E=="A"]<- "A"
grupos_reuniao$TX_RESP_Q006E[grupos_reuniao$TX_RESP_Q006E=="B"]<- "B"
grupos_reuniao$TX_RESP_Q006E[grupos_reuniao$TX_RESP_Q006E=="C"]<- "B"
grupoA <- filter(grupos_reuniao, TX_RESP_Q006E == "A" )
grupoB <- filter(grupos_reuniao, TX_RESP_Q006E == "B" )
grupo <- c("Nunca/Quase Nunca", "Maior frequência","Nunca/Quase Nunca", "Maior frequência")
disciplina <- c("Matemática","Matemática", "Português", "Português")
media <- c(mean(grupoA$PROFICIENCIA_MT_SAEB), mean(grupoB$PROFICIENCIA_MT_SAEB),
mean(grupoA$PROFICIENCIA_LP_SAEB), mean(grupoB$PROFICIENCIA_LP_SAEB))
# se mat
n_sample_A_m <- length(grupoA$PROFICIENCIA_MT_SAEB)
n_sample_B_m <- length(grupoB$PROFICIENCIA_MT_SAEB)
sd_sample_A_m <- sd(grupoA$PROFICIENCIA_MT_SAEB)
sd_sample_B_m <- sd(grupoB$PROFICIENCIA_MT_SAEB)
se_sample_A_m <- sd_sample_A_m/sqrt(n_sample_A_m)
se_sample_B_m <- sd_sample_B_m/sqrt(n_sample_B_m)
# se port
n_sample_A_p <- length(grupoA$PROFICIENCIA_LP_SAEB)
n_sample_B_p <- length(grupoB$PROFICIENCIA_LP_SAEB)
sd_sample_A_p <- sd(grupoA$PROFICIENCIA_LP_SAEB)
sd_sample_B_p <- sd(grupoB$PROFICIENCIA_LP_SAEB)
se_sample_A_p <- sd_sample_A_p/sqrt(n_sample_A_p)
se_sample_B_p <- sd_sample_B_p/sqrt(n_sample_B_p)
se <- c(se_sample_A_m,se_sample_B_m,se_sample_A_p,se_sample_B_p)
DATA <- data.frame(grupo, disciplina, media, se)
DATA <- mutate(DATA, Conf_Low = media -1.96*se, Conf_High = media +1.96*se )
ggplot(DATA)+
geom_linerange(aes(x = grupo,
ymin = Conf_Low,
ymax = Conf_High),
color = "#bdbdbd",
lwd = 1.5) +
geom_point(aes(x = grupo,
y = media,
color = grupo), size = 2.5)+
scale_color_manual(name = "", values=c("#29166F","#F8C301"))+
ylab("Pontuação Saeb")+
xlab("")+
theme_bw()+
theme(strip.background = element_rect(fill="white", linetype = "blank"),
strip.text = element_text(colour = 'black'),
axis.line = element_line(colour = "#bdbdbd"),
panel.border = element_rect(colour = "#bdbdbd"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "bottom",
panel.spacing = unit(0.5, "cm"))+
coord_flip()+
facet_grid(,vars(disciplina), scales="free")
freq(SERGIPE_COMP$TX_RESP_Q010B)
WIFI <- select(ASSOCIACOES, PROFICIENCIA_LP_SAEB, PROFICIENCIA_MT_SAEB, TX_RESP_Q010B) %>% na.omit()
freq(WIFI$TX_RESP_Q010B)
WIFI$TX_RESP_Q010B[WIFI$TX_RESP_Q010B=="."]<-NA
WIFI$TX_RESP_Q010B[WIFI$TX_RESP_Q010B=="*"]<-NA
WIFI <- na.omit(WIFI)
wifi_a <- filter(WIFI, TX_RESP_Q010B == "A" )
wifi_b <- filter(WIFI, TX_RESP_Q010B == "B" )
t.test(wifi_a$PROFICIENCIA_LP_SAEB, wifi_b$PROFICIENCIA_LP_SAEB, var.equal = FALSE)
wifi_group <- c("Não", "Sim","Não", "Sim")
disciplina <- c("Matemática","Matemática", "Português", "Português")
wifi_media <- c(mean(wifi_a$PROFICIENCIA_MT_SAEB), mean(wifi_b$PROFICIENCIA_MT_SAEB),
mean(wifi_a$PROFICIENCIA_LP_SAEB), mean(wifi_b$PROFICIENCIA_LP_SAEB))
# se mat - wifi
n_wifi_A_m <- length(wifi_a$PROFICIENCIA_MT_SAEB)
n_wifi_B_m <- length(wifi_b$PROFICIENCIA_MT_SAEB)
sd_wifi_A_m <- sd(wifi_a$PROFICIENCIA_MT_SAEB)
sd_wifi_B_m <- sd(wifi_b$PROFICIENCIA_MT_SAEB)
se_wifi_A_m <- sd_wifi_A_m/sqrt(n_wifi_A_m )
se_wifi_B_m <- sd_wifi_B_m/sqrt(n_wifi_B_m )
# se port - wifi
n_wifi_A_p <- length(wifi_a$PROFICIENCIA_LP_SAEB)
n_wifi_B_p <- length(wifi_b$PROFICIENCIA_LP_SAEB)
sd_wifi_A_p <- sd(wifi_a$PROFICIENCIA_LP_SAEB)
sd_wifi_B_p <- sd(wifi_b$PROFICIENCIA_LP_SAEB)
se_wifi_A_p <- sd_wifi_A_p/sqrt(n_wifi_A_p )
se_wifi_B_p <- sd_wifi_B_p/sqrt(n_wifi_B_p )
se_wifi <- c(se_wifi_A_m, se_wifi_B_m, se_wifi_A_p, se_wifi_B_p)
DATA_WIFI <- data.frame(wifi_group, disciplina, wifi_media, se_wifi)
DATA_WIFI <- mutate(DATA_WIFI, Conf_Low = wifi_media -1.96*se_wifi, Conf_High = wifi_media +1.96*se_wifi )
ggplot(DATA_WIFI)+
geom_linerange(aes(x = wifi_group,
ymin = Conf_Low,
ymax = Conf_High),
color = "#bdbdbd",
lwd = 1.5) +
geom_point(aes(x = wifi_group,
y = wifi_media,
color = wifi_group), size = 3)+
scale_color_manual(name = "", values=c("#F8C301","#29166F"))+
ylab("Pontuação Saeb")+
xlab("")+
theme_bw()+
theme(strip.background = element_rect(fill="white", linetype = "blank"),
strip.text = element_text(colour = 'black'),
axis.line = element_line(colour = "#bdbdbd"),
panel.border = element_rect(colour = "#bdbdbd"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
legend.position = "bottom",
panel.spacing = unit(0.5, "cm"))+
coord_flip()+
facet_grid(,vars(disciplina), scales="free")
